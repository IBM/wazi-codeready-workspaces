1a. Check out 3rd party language server dependencies builder repo (will collect variables later)

1b. Define list of upstream containers & RPMs pulled into them from https://pkgs.devel.redhat.com/cgit/?q=codeready-workspaces 

== codeready-workspaces-configbump (crw-2.9-rhel-8) ==
FROM ubi8-minimal:8.3-298.1618432845
COPY asset-*.tar.gz /tmp/assets/
RUN microdnf -y install tar gzip shadow-utils && \
    adduser appuser && \
    microdnf -y clean all && rm -rf /var/cache/yum && \
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"

== codeready-workspaces-operator (crw-2.9-rhel-8) ==
FROM devtools/go-toolset-rhel7:1.13.15-4  as builder
ARG DEV_WORKSPACE_CONTROLLER_VERSION="0.4.x"
ARG DEV_WORKSPACE_CHE_OPERATOR_VERSION="7.30.x"
ADD . /che-operator
COPY devworkspace-operator.zip /tmp
COPY devworkspace-che-operator.zip /tmp
FROM ubi8-minimal:8.4-200.1622548483
COPY --from=builder /tmp/che-operator/che-operator /usr/local/bin/che-operator
COPY --from=builder /che-operator/templates/keycloak-provision.sh /tmp/keycloak-provision.sh
COPY --from=builder /che-operator/templates/keycloak-update.sh /tmp/keycloak-update.sh
COPY --from=builder /che-operator/templates/oauth-provision.sh /tmp/oauth-provision.sh
COPY --from=builder /che-operator/templates/delete-identity-provider.sh /tmp/delete-identity-provider.sh
COPY --from=builder /che-operator/templates/create-github-identity-provider.sh /tmp/create-github-identity-provider.sh
COPY --from=builder /tmp/devworkspace-operator/templates/deploy /tmp/devworkspace-operator/templates
COPY --from=builder /tmp/devworkspace-che-operator/templates/deploy /tmp/devworkspace-che-operator/templates
RUN microdnf install -y httpd-tools && microdnf -y update && microdnf -y clean all && rm -rf /var/cache/yum && echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"

== codeready-workspaces-operator-metadata (crw-2.9-rhel-8) ==
FROM scratch
COPY manifests /manifests/
COPY metadata /metadata/

== codeready-workspaces-dashboard (crw-2.9-rhel-8) ==
FROM ubi8/nodejs-12:1-88 as builder
RUN yum -y -q --nobest update && \
    yum -y -q clean all && rm -rf /var/cache/yum
COPY package.json /dashboard/
COPY yarn.lock /dashboard/
COPY .yarn/releases/yarn-*.cjs /dashboard/.yarn/releases/
COPY .yarnrc.yml /dashboard/
COPY asset-node-modules-cache.tgz /tmp/
COPY . /dashboard/
FROM ubi8/httpd-24:1-141 AS registry
    yum -y -q --nobest update && \
    yum -y -q clean all && rm -rf /var/cache/yum && \
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"
COPY .htaccess /var/www/html/
COPY --from=builder /dashboard/lib /var/www/html/dashboard

== codeready-workspaces-devfileregistry (crw-2.9-rhel-8) ==
FROM ubi8/python-38:1-61 as builder
COPY root-local.tgz /tmp/root-local.tgz
COPY ./build/dockerfiles/content_sets_rhel8.repo /etc/yum.repos.d/
COPY ./build/dockerfiles/rhel.install.sh /tmp
RUN /tmp/rhel.install.sh && rm -f /tmp/rhel.install.sh
COPY ./build/scripts ./arbitrary-users-patch/base_images /build/
COPY ./devfiles /build/devfiles
COPY ./build/dockerfiles/rhel.cache_projects.sh resources.tgz /tmp/ 
FROM ubi8/httpd-24:1-141 AS registry
    yum -y -q update && \
    yum -y -q clean all && rm -rf /var/cache/yum && \
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"
COPY README.md .htaccess /var/www/html/
COPY --from=builder /build/devfiles /var/www/html/devfiles
COPY --from=builder /build/resources /var/www/html/resources
COPY ./images /var/www/html/images

== codeready-workspaces-devworkspace-controller (crw-2.9-rhel-8) ==
FROM devtools/go-toolset-rhel7:1.14.12-4.1615820747  as builder
COPY go.mod go.mod
COPY go.sum go.sum
COPY . .
FROM ubi8-minimal:8.4-200.1622548483
RUN microdnf -y update && microdnf clean all && rm -rf /var/cache/yum && echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"
COPY --from=builder /devworkspace-operator/_output/bin/devworkspace-controller /usr/local/bin/devworkspace-controller
COPY --from=builder /devworkspace-operator/_output/bin/webhook-server /usr/local/bin/webhook-server
COPY --from=builder /devworkspace-operator/internal-registry internal-registry
COPY build/bin /usr/local/bin

== codeready-workspaces-devworkspace (crw-2.9-rhel-8) ==
FROM devtools/go-toolset-rhel7:1.14.12-4.1615820747 as builder
COPY go.mod go.mod
COPY go.sum go.sum
COPY . .
FROM ubi8-minimal:8.4-200.1622548483
RUN microdnf -y update && microdnf clean all && rm -rf /var/cache/yum && echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"
COPY --from=builder /workspace/_output/bin/devworkspace-che-operator /usr/local/bin/devworkspace-che-operator
COPY build/bin /usr/local/bin

== codeready-workspaces-imagepuller (crw-2.9-rhel-8) ==
FROM rhel8/go-toolset:1.14.12-17.1618436992 as builder
COPY go.mod .
COPY go.sum .
COPY resources.tgz /tmp/resources.tgz
COPY . .
RUN adduser appuser && \
FROM ubi8-minimal:8.3-298.1618432845
RUN microdnf -y update && microdnf clean all && rm -rf /var/cache/yum && echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"
COPY --from=builder /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem /etc/pki/ca-trust/extracted/pem/
COPY --from=builder /etc/pki/tls/certs/ca-bundle.crt                  /etc/pki/tls/certs/
COPY --from=builder /etc/passwd /etc/passwd
COPY --from=builder /kubernetes-image-puller/bin/kubernetes-image-puller /
COPY --from=builder /kubernetes-image-puller/bin/sleep /bin/sleep

== codeready-workspaces-jwtproxy (crw-2.9-rhel-8) ==
FROM rhel8/go-toolset:1.14.12-17.1618436992 as builder
COPY . /go/src/github.com/eclipse/che-jwtproxy/
RUN adduser appuser && \
    CGO_ENABLED=0 GOOS=linux go build -a -ldflags '-w -s' -a -installsuffix cgo -o jwtproxy cmd/jwtproxy/main.go
FROM ubi8-minimal:8.3-298.1618432845
    microdnf -y clean all && rm -rf /var/cache/yum && echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"
COPY --from=builder /etc/passwd /etc/passwd
COPY --from=builder /go/src/github.com/eclipse/che-jwtproxy/jwtproxy /usr/local/bin

== codeready-workspaces-machineexec (crw-2.9-rhel-8) ==
FROM rhel8/go-toolset:1.14.12-17.1618436992 as builder
COPY . .
RUN adduser unprivilegeduser && \
    CGO_ENABLED=0 GOOS=linux go build -mod=vendor -a -ldflags '-w -s' -a -installsuffix cgo -o che-machine-exec . && \
FROM scratch
COPY --from=builder /rootfs /
COPY --from=builder /che-machine-exec/sleep /bin/sleep

== codeready-workspaces-pluginbroker-artifacts (crw-2.9-rhel-8) ==
FROM devtools/go-toolset-rhel7:1.14.12-4.1615820747 as builder
COPY . /build/che-plugin-broker/
RUN adduser appuser && \
    CGO_ENABLED=0 GOOS=linux go build -mod vendor -a -ldflags '-w -s' -installsuffix cgo -o artifacts-broker main.go
FROM ubi8-minimal:8.3-298.1618432845
RUN microdnf -y update && microdnf clean all && rm -rf /var/cache/yum && echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"
COPY --from=builder /etc/passwd /etc/passwd
COPY --from=builder /build/che-plugin-broker/brokers/artifacts/cmd/artifacts-broker /

== codeready-workspaces-pluginbroker-metadata (crw-2.9-rhel-8) ==
FROM devtools/go-toolset-rhel7:1.14.12-4.1615820747 as builder
COPY . /build/che-plugin-broker/
RUN adduser appuser && \
    CGO_ENABLED=0 GOOS=linux go build -mod vendor -a -ldflags '-w -s' -installsuffix cgo -o metadata-broker main.go
FROM ubi8-minimal:8.3-298.1618432845
RUN microdnf -y update && microdnf clean all && rm -rf /var/cache/yum && echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"
COPY --from=builder /etc/passwd /etc/passwd
COPY --from=builder /build/che-plugin-broker/brokers/metadata/cmd/metadata-broker /

== codeready-workspaces-plugin-java11-openj9 (crw-2.9-rhel-8) ==
FROM ubi8-minimal:8.4-200.1622548483
    GRADLE_VERSION="6.1" \
    MAVEN_VERSION="3.6.3" \
    LOMBOK_VERSION="1.18.18" \
COPY gradle-${GRADLE_VERSION}-bin.zip apache-maven-${MAVEN_VERSION}-bin.tar.gz /tmp/
COPY lombok-${LOMBOK_VERSION}.jar /lombok.jar
RUN microdnf install -y bash tar gzip unzip which shadow-utils findutils wget curl openshift-clients-4.7.0-202105111743.p0.git.95881af.el8 \
    sudo git procps-ng nss_wrapper bzip2 yum && \
    yum -y -q update && \
    yum -y -q clean all && rm -rf /var/cache/yum && \
    mkdir -p /opt; unzip -d /opt /tmp/gradle-${GRADLE_VERSION}-bin.zip && \
    mv /opt/gradle-${GRADLE_VERSION} /opt/gradle && rm -f /tmp/gradle-${GRADLE_VERSION}-bin.zip && \
    tar xzf /tmp/apache-maven-${MAVEN_VERSION}-bin.tar.gz -C /opt && \
    mv /opt/apache-maven-${MAVEN_VERSION} /opt/apache-maven && \
    rm -f /tmp/apache-maven-${MAVEN_VERSION}-bin.tar.gz && \
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages" && \

== codeready-workspaces-plugin-java11 (crw-2.9-rhel-8) ==
FROM ubi8-minimal:8.4-200.1622548483
    GRADLE_VERSION="6.1" \
    MAVEN_VERSION="3.6.3" \
    LOMBOK_VERSION="1.18.18" \
COPY gradle-${GRADLE_VERSION}-bin.zip apache-maven-${MAVEN_VERSION}-bin.tar.gz /tmp/
COPY lombok-${LOMBOK_VERSION}.jar /lombok.jar
RUN microdnf install -y bash tar gzip unzip which shadow-utils findutils wget curl openshift-clients-4.7.0-202105111743.p0.git.95881af.el8 \
    sudo git procps-ng nss_wrapper bzip2 yum && \
    yum -y -q update && \
    yum -y -q clean all && rm -rf /var/cache/yum && \
    mkdir -p /opt; unzip -d /opt /tmp/gradle-${GRADLE_VERSION}-bin.zip && \
    mv /opt/gradle-${GRADLE_VERSION} /opt/gradle && rm -f /tmp/gradle-${GRADLE_VERSION}-bin.zip && \
    tar xzf /tmp/apache-maven-${MAVEN_VERSION}-bin.tar.gz -C /opt && \
    mv /opt/apache-maven-${MAVEN_VERSION} /opt/apache-maven && \
    rm -f /tmp/apache-maven-${MAVEN_VERSION}-bin.tar.gz && \
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages" && \

== codeready-workspaces-plugin-java8-openj9 (crw-2.9-rhel-8) ==
FROM ubi8-minimal:8.4-200.1622548483
    NODEJS_VERSION=12 \
    MAVEN_VERSION="3.6.3" \
    LOMBOK_VERSION="1.18.18" \
    PYTHON_VERSION="3.8" \
COPY . /tmp/assets/
COPY lombok-${LOMBOK_VERSION}.jar /lombok.jar
RUN microdnf -y install yum && \
    yum -y -q install bash tar gzip unzip which shadow-utils findutils wget curl openshift-clients-4.7.0-202105111743.p0.git.95881af.el8 \
        yum -y -q module reset nodejs && \
        yum -y -q module enable nodejs:$NODEJS_VERSION && \
        INSTALL_PKGS="nodejs npm nodejs-nodemon nss_wrapper" && ln -s /usr/lib/node_modules/nodemon/bin/nodemon.js /usr/bin/nodemon && \
        yum -y -q remove $INSTALL_PKGS && \
        yum -y -q install --setopt=tsflags=nodocs $INSTALL_PKGS && rpm -V $INSTALL_PKGS && \
        yum -y -q clean all --enablerepo='*' && \
        yum -y -q module reset python38 && \
        yum -y -q module enable python38:${PYTHON_VERSION} && \
        yum -y -q install python38 python38-devel python38-setuptools python38-pip && \
    yum -y -q update && \
    yum -y -q clean all && rm -rf /var/cache/yum && \
    tar xzf /tmp/assets/apache-maven-${MAVEN_VERSION}-bin.tar.gz -C /opt && \
    mv /opt/apache-maven-${MAVEN_VERSION} /opt/apache-maven && \
    rm -f /tmp/assets/apache-maven-${MAVEN_VERSION}-bin.tar.gz && \
    ln -s /usr/bin/python${PYTHON_VERSION} /usr/bin/python && \
    ln -s /usr/bin/pip${PYTHON_VERSION} /usr/bin/pip && \
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages" && \

== codeready-workspaces-plugin-java8 (crw-2.9-rhel-8) ==
FROM ubi8-minimal:8.3-298.1618432845
    NODEJS_VERSION=12 \
    MAVEN_VERSION="3.6.3" \
    LOMBOK_VERSION="1.18.18" \
    PYTHON_VERSION="3.8" \
COPY . /tmp/assets/
COPY lombok-${LOMBOK_VERSION}.jar /lombok.jar
RUN microdnf -y install yum && \
    yum -y -q install bash tar gzip unzip which shadow-utils findutils wget curl openshift-clients-4.7.0-202104141511.p0.git.3964.ac5b995.el8 \
        yum -y -q module reset nodejs && \
        yum -y -q module enable nodejs:$NODEJS_VERSION && \
        INSTALL_PKGS="nodejs npm nodejs-nodemon nss_wrapper" && ln -s /usr/lib/node_modules/nodemon/bin/nodemon.js /usr/bin/nodemon && \
        yum -y -q remove $INSTALL_PKGS && \
        yum -y -q install --setopt=tsflags=nodocs $INSTALL_PKGS && rpm -V $INSTALL_PKGS && \
        yum -y -q clean all --enablerepo='*' && \
        yum -y -q module reset python38 && \
        yum -y -q module enable python38:${PYTHON_VERSION} && \
        yum -y -q install python38 python38-devel python38-setuptools python38-pip && \
    yum -y -q update && \
    yum -y -q clean all && rm -rf /var/cache/yum && \
    tar xzf /tmp/assets/apache-maven-${MAVEN_VERSION}-bin.tar.gz -C /opt && \
    mv /opt/apache-maven-${MAVEN_VERSION} /opt/apache-maven && \
    rm -f /tmp/assets/apache-maven-${MAVEN_VERSION}-bin.tar.gz && \
    ln -s /usr/bin/python${PYTHON_VERSION} /usr/bin/python && \
    ln -s /usr/bin/pip${PYTHON_VERSION} /usr/bin/pip && \
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages" && \

== codeready-workspaces-plugin-kubernetes (crw-2.9-rhel-8) ==
FROM ubi8-minimal:8.3-298.1618432845
    KAMEL_VERSION="1.3.2" \
ADD etc/storage.conf $HOME/.config/containers/storage.conf
COPY etc/docker.sh /usr/local/bin/docker
COPY . /tmp/assets
RUN microdnf install -y which dnf && dnf module reset -y nodejs && \
    dnf module install -y nodejs:12 && \
    dnf install -y buildah npm helm-3.5.0-6.el8 openshift-clients-4.7.0-202104141511.p0.git.3964.ac5b995.el8 && \
    dnf -y -q clean all && rm -rf /var/cache/yum && \
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages" && \

== codeready-workspaces-plugin-openshift (crw-2.9-rhel-8) ==
FROM ubi8-minimal:8.3-298.1618432845
    ODO_VERSION="v1.2.6" \
COPY bin.tgz /tmp/
RUN microdnf install -y bash tar gzip which dnf openshift-clients-4.7.0-202104141511.p0.git.3964.ac5b995.el8 && \
    dnf -y -q clean all && rm -rf /var/cache/yum && \
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages" && \

== codeready-workspaces-pluginregistry (crw-2.9-rhel-8) ==
FROM ubi8/python-38:1-61 as builder
COPY root-local.tgz /tmp/root-local.tgz
COPY ./build/dockerfiles/content_sets_rhel8.repo /etc/yum.repos.d/
COPY ./build/dockerfiles/rhel.install.sh /tmp
RUN /tmp/rhel.install.sh && rm -f /tmp/rhel.install.sh
COPY ./build/scripts/*.sh /build/
COPY che-*.yaml /build/
COPY resources.tgz /build/
COPY ./v3/plugins/.htaccess /build/v3/plugins/.htaccess
COPY ./v3/images/default.png /build/v3/images/
FROM ubi8/httpd-24:1-141 AS registry
    yum -y -q --nobest update && \
    yum -y -q clean all && rm -rf /var/cache/yum && \
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"
COPY README.md .htaccess /var/www/html/
COPY --from=builder /build/output/v3 /var/www/html/v3
COPY --from=builder /build/v3/plugins/.htaccess /var/www/html/v3/plugins/
COPY --from=builder /build/v3/images/default.png /var/www/html/v3/images/

== codeready-workspaces (crw-2.9-rhel-8) ==
FROM ubi8-minimal:8.4-200.1622548483
RUN microdnf install java-11-openjdk-headless tar gzip shadow-utils findutils && \
    microdnf -y clean all && rm -rf /var/cache/yum && echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages" && \
    adduser -G root user && mkdir -p /home/user/codeready
COPY asset-server.tgz /tmp/asset-server.tgz

== codeready-workspaces-stacks-cpp (crw-2.9-rhel-8) ==
FROM ubi8:8.4-203.1622660121
    yum install -y llvm-toolset clang clang-libs clang-tools-extra git-clang-format gdb wget bzip2 sudo make cmake gcc gcc-c++ \
    yum -y -q clean all && rm -rf /var/cache/yum && \
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"

== codeready-workspaces-stacks-dotnet (crw-2.9-rhel-8) ==
FROM ubi8/dotnet-31:3.1-21
    DOTNET_RPM_VERSION=3.1 \
RUN yum install -y --setopt=tsflags=nodocs wget curl openshift-clients-4.7.0-202103251046.p0.git.3957.c4da68b.el8 dotnet dotnet-host \
    dotnet-hostfxr-${DOTNET_RPM_VERSION} dotnet-runtime-${DOTNET_RPM_VERSION} dotnet-sdk-${DOTNET_RPM_VERSION} && \
    yum remove -y nodejs && \
    yum -y -q update && \
    yum -y -q clean all && rm -rf /var/cache/yum && \
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"

== codeready-workspaces-stacks-golang (crw-2.9-rhel-8) ==
FROM rhel8/go-toolset:1.14.12-17.1618436992
COPY . /tmp/assets/
    yum remove -y nodejs && \
    yum install -y \
    sudo git wget curl nss_wrapper bzip2 openshift-clients-4.7.0-202103251046.p0.git.3957.c4da68b.el8 && \
    yum -y -q update && \
    yum -y -q clean all && rm -rf /var/cache/yum && \
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"

== codeready-workspaces-stacks-php (crw-2.9-rhel-8) ==
FROM ubi8/php-74:1-17.1614874881
COPY . /tmp/assets/
RUN dnf install -y php-fpm php-opcache php-devel php-pear php-gd php-mysqli php-zlib php-curl ca-certificates && \
    yum remove -y nodejs kernel-headers && \
    yum install -y sudo openshift-clients-4.7.0-202103251046.p0.git.3957.c4da68b.el8 && \
    yum -y -q update && \
    yum -y -q clean all && rm -rf /var/cache/yum && \
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"

== codeready-workspaces-theia-dev (crw-2.9-rhel-8) ==
FROM ubi8/nodejs-12:1-88
RUN yum -y -q update --nobest && \
    yum -y -q clean all && rm -rf /var/cache/yum
RUN yum install -y curl make cmake gcc gcc-c++ python2 git openssh less bash tar gzip \
    && yum -y clean all && rm -rf /var/cache/yum && \
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"
COPY asset-yarn-*.tgz /tmp/
COPY asset-eclipse-che-theia-generator.tgz ${HOME}/eclipse-che-theia-generator.tgz
    yarn ${YARN_FLAGS} global add yo generator-code vsce @theia/generator-plugin@0.0.1-1562578105 file:${HOME}/eclipse-che-theia-generator && \
RUN echo "Installed npm Packages" && npm ls -g | sort | uniq || true
RUN echo "End Of Installed npm Packages"

== codeready-workspaces-theia-endpoint (crw-2.9-rhel-8) ==
FROM registry-proxy.engineering.redhat.com/rh-osbs/codeready-workspaces-theia-rhel8:2.9 as builder
COPY asset-theia-endpoint-runtime-pre-assembly-nexe-cache-*.tar.gz asset-theia-endpoint-runtime-binary-yarn-*.tar.gz asset-node-src.tar.gz /tmp/
    export NODE_VERSION=$(node --version | sed -s 's/v//') && mkdir -p "/home/theia/.nexe/${NODE_VERSION}" && \
    tar zxf /tmp/asset-node-src.tar.gz --strip-components=1 -C "/home/theia/.nexe/${NODE_VERSION}" && \
RUN yum install -y git make cmake gcc gcc-c++ python2 automake autoconf which glibc-devel && \
    yum -y clean all && rm -rf /var/cache/yum && ln -s /usr/bin/python2 /usr/bin/python
COPY asset-theia-endpoint-runtime-pre-assembly-nexe-*.tar.gz /tmp/
FROM ubi8-minimal:8.4-200.1622548483 as runtime
RUN microdnf -y install yum && \
    yum -y -q update --nobest && \
    yum -y -q clean all && rm -rf /var/cache/yum && \
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"
COPY --from=builder /home/theia/plugin-remote-endpoint /plugin-remote-endpoint

== codeready-workspaces-theia (crw-2.9-rhel-8) ==
FROM registry-proxy.engineering.redhat.com/rh-osbs/codeready-workspaces-theia-dev-rhel8:2.9 as builder
ARG THEIA_VERSION=master
COPY asset-theia-source-code.tar.gz /tmp/asset-theia-source-code.tar.gz
COPY asset-branding.tar.gz /tmp/asset-branding.tar.gz
ADD src/patches ${HOME}/patches
RUN if [ -d "${HOME}/patches/${THEIA_VERSION}" ]; then \
    echo "Applying patches for Theia version ${THEIA_VERSION}"; \
    for file in $(find "${HOME}/patches/${THEIA_VERSION}" -name '*.patch'); do \
COPY asset-che-theia.tar.gz /tmp/asset-che-theia.tar.gz
    echo "" > ${HOME}/theia-source-code/dev-packages/electron/scripts/post-install.js && \
COPY asset-yarn-*.tar.gz asset-post-download-dependencies-*.tar.gz /tmp/
COPY asset-yarn-*.lock /tmp/
COPY asset-node-headers.tar.gz ${HOME}/asset-node-headers.tar.gz
COPY asset-untagged-theia_yeoman_plugin.theia /home/theia-dev/theia-source-code/production/plugins/theia_yeoman_plugin.theia
FROM ubi8/nodejs-12:1-88 as build-result
COPY --from=builder /home/theia-dev/theia-source-code/production /che-theia-build
FROM ubi8/nodejs-12:1-88 as runtime
RUN yum -y -q update --nobest && \
    yum -y -q clean all && rm -rf /var/cache/yum && \
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"
COPY --from=builder /tmp/branding ${HOME}/branding
COPY --from=build-result /che-theia-build/plugins /default-theia-plugins
COPY asset-sshpass-sources.tar.gz /tmp/
RUN yum install -y sudo git bzip2 which bash curl openssh less && tar -xvf /tmp/asset-sshpass-sources.tar.gz -C /tmp/ && \
    cd /tmp/sshpass-*/ && ./configure && make install && cd /tmp && rm -rf *sshpass-* && \
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"
COPY asset-yarn-runtime-image-*.tar.gz /tmp/
    adduser -r -u 1002 -G root -d ${HOME} -m -s /bin/sh theia \
    && yarn global add ${YARN_FLAGS} yo @theia/generator-plugin@0.0.1-1562578105 generator-code typescript@3.5.3 \
COPY --chown=theia:root --from=build-result /che-theia-build /home/theia

== codeready-workspaces-traefik (crw-2.9-rhel-8) ==
FROM ubi8-minimal:8.3-298.1618432845 
COPY asset-*.tar.gz /tmp/assets/ 
COPY script/ca-certificates.crt /etc/ssl/certs/
RUN microdnf -y install tar gzip && \ 
    microdnf -y clean all && rm -rf /var/cache/yum && echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages" 

1c. Other than the above, all artifacts used in CodeReady Workspaces are now built in RH Central CI Jenkins:
https://codeready-workspaces-jenkins.rhev-ci-vms.eng.rdu2.redhat.com/view/CRW_CI/view/Builds/
https://codeready-workspaces-jenkins.rhev-ci-vms.eng.rdu2.redhat.com/view/CRW_CI/view/Pipelines/

See also latest build architecture diagram & development documentation:
https://docs.google.com/presentation/d/1R9tr67pDMk3UVUbvN7vBJbJCYGlUsO2ZPcXbdaoOvTs/edit#slide=id.g4ac34a3cdd_0_0
https://github.com/redhat-developer/codeready-workspaces-productization/tree/master/devdoc

 == golang ==

2a. Install golang go deps: go-language-server@
 * GOLANG_IMAGE = registry.access.redhat.com/ubi8/go-toolset:1.14.7-15
 * GOLANG_LINT_VERSION = v1.22.2
 * GOLANG_LS_OLD_DEPS = console-stamp@0.2.9 strip-ansi@5.2.0 has-ansi@4.0.0 ansi-regex@4.1.0 chalk@2.4.2 escape-string-regexp@2.0.0 ansi-styles@4.1.0 supports-color@7.0.0
 * GOLANG_LS_VERSION = 0.1.7

  go get -v github.com/stamblerre/gocode
  go get -v github.com/uudashr/gopkgs/cmd/gopkgs
  go get -v github.com/ramya-rao-a/go-outline
  go get -v github.com/acroca/go-symbols
  go get -v golang.org/x/tools/cmd/guru
  go get -v golang.org/x/tools/cmd/gorename
  go get -v github.com/fatih/gomodifytags
  go get -v github.com/haya14busa/goplay/cmd/goplay
  go get -v github.com/josharian/impl
  go get -v golang.org/x/tools/cmd/gotype
  go get -v github.com/rogpeppe/godef
  go get -v golang.org/x/tools/cmd/godoc
  go get -v github.com/zmb3/gogetdoc
  go get -v golang.org/x/tools/cmd/goimports
  go get -v sourcegraph.com/sqs/goreturns
  go get -v golang.org/x/lint/golint
  go get -v github.com/cweill/gotests/...
  go get -v honnef.co/go/tools/...
  go get -v github.com/sourcegraph/go-langserver
  go get -v github.com/go-delve/delve/cmd/dlv
  go get -v github.com/davidrjenni/reftools/cmd/fillstruct
  go get -v golang.org/x/tools/gopls
  go build -o /go/bin/gocode-gomod github.com/stamblerre/gocode

2b. Install golang npm deps: go-language-server@0.1.7


> console-stamp@0.2.9 postinstall /tmp/npm-deps-tmp/node_modules/console-stamp
> node ./msg.js

Attention
    Console-stamp version 3.0.0 Release Candidate is out. Install by using the tag '@next'. NB: Breaking changes.
    For more details goto: https://www.npmjs.com/package/console-stamp/v/next

+ go-language-server@0.1.7
added 89 packages from 76 contributors and audited 89 packages in 6.843s

4 packages are looking for funding
  run `npm fund` for details

found 8 vulnerabilities (2 low, 6 high)
  run `npm audit fix` to fix them, or `npm audit` for details

/tmp/npm-deps-tmp
└─┬ go-language-server@0.1.7
  ├── command-exists@1.2.9
  ├── commander@2.20.3
  ├─┬ console-stamp@0.2.9
  │ ├─┬ chalk@1.1.3
  │ │ ├── ansi-styles@2.2.1
  │ │ ├── escape-string-regexp@1.0.5
  │ │ ├─┬ has-ansi@2.0.0
  │ │ │ └── ansi-regex@2.1.1
  │ │ ├─┬ strip-ansi@3.0.1
  │ │ │ └── ansi-regex@2.1.1 deduped
  │ │ └── supports-color@2.0.0
  │ ├─┬ dateformat@1.0.12
  │ │ ├── get-stdin@4.0.1
  │ │ └─┬ meow@3.7.0
  │ │   ├─┬ camelcase-keys@2.1.0
  │ │   │ ├── camelcase@2.1.1
  │ │   │ └── map-obj@1.0.1 deduped
  │ │   ├── decamelize@1.2.0
  │ │   ├─┬ loud-rejection@1.6.0
  │ │   │ ├─┬ currently-unhandled@0.4.1
  │ │   │ │ └── array-find-index@1.0.2
  │ │   │ └── signal-exit@3.0.3
  │ │   ├── map-obj@1.0.1
  │ │   ├── minimist@1.2.5
  │ │   ├─┬ normalize-package-data@2.5.0
  │ │   │ ├── hosted-git-info@2.8.9
  │ │   │ ├─┬ resolve@1.20.0
  │ │   │ │ ├─┬ is-core-module@2.4.0
  │ │   │ │ │ └─┬ has@1.0.3
  │ │   │ │ │   └── function-bind@1.1.1
  │ │   │ │ └── path-parse@1.0.7
  │ │   │ ├── semver@5.7.1
  │ │   │ └─┬ validate-npm-package-license@3.0.4
  │ │   │   ├─┬ spdx-correct@3.1.1
  │ │   │   │ ├── spdx-expression-parse@3.0.1 deduped
  │ │   │   │ └── spdx-license-ids@3.0.9
  │ │   │   └─┬ spdx-expression-parse@3.0.1
  │ │   │     ├── spdx-exceptions@2.3.0
  │ │   │     └── spdx-license-ids@3.0.9 deduped
  │ │   ├── object-assign@4.1.1 deduped
  │ │   ├─┬ read-pkg-up@1.0.1
  │ │   │ ├─┬ find-up@1.1.2
  │ │   │ │ ├─┬ path-exists@2.1.0
  │ │   │ │ │ └── pinkie-promise@2.0.1 deduped
  │ │   │ │ └─┬ pinkie-promise@2.0.1
  │ │   │ │   └── pinkie@2.0.4
  │ │   │ └─┬ read-pkg@1.1.0
  │ │   │   ├─┬ load-json-file@1.1.0
  │ │   │   │ ├── graceful-fs@4.2.6 deduped
  │ │   │   │ ├─┬ parse-json@2.2.0
  │ │   │   │ │ └─┬ error-ex@1.3.2
  │ │   │   │ │   └── is-arrayish@0.2.1
  │ │   │   │ ├── pify@2.3.0
  │ │   │   │ ├── pinkie-promise@2.0.1 deduped
  │ │   │   │ └─┬ strip-bom@2.0.0
  │ │   │   │   └── is-utf8@0.2.1
  │ │   │   ├── normalize-package-data@2.5.0 deduped
  │ │   │   └─┬ path-type@1.1.0
  │ │   │     ├── graceful-fs@4.2.6 deduped
  │ │   │     ├── pify@2.3.0 deduped
  │ │   │     └── pinkie-promise@2.0.1 deduped
  │ │   ├─┬ redent@1.0.0
  │ │   │ ├─┬ indent-string@2.1.0
  │ │   │ │ └─┬ repeating@2.0.1
  │ │   │ │   └── is-finite@1.1.0
  │ │   │ └─┬ strip-indent@1.0.1
  │ │   │   └── get-stdin@4.0.1 deduped
  │ │   └── trim-newlines@1.0.0
  │ └── merge@1.2.1
  ├── diff@3.3.1
  ├─┬ fs-extra@4.0.3
  │ ├── graceful-fs@4.2.6
  │ ├─┬ jsonfile@4.0.0
  │ │ └── graceful-fs@4.2.6 deduped
  │ └── universalify@0.1.2
  ├─┬ json-rpc2@1.0.2
  │ ├─┬ debug@2.6.9
  │ │ └── ms@2.0.0
  │ ├─┬ es5class@2.3.1
  │ │ └── better-curry@1.6.0
  │ ├── eventemitter3@1.2.0
  │ ├─┬ faye-websocket@0.11.4
  │ │ └─┬ websocket-driver@0.7.4
  │ │   ├── http-parser-js@0.5.3
  │ │   ├── safe-buffer@5.2.1
  │ │   └── websocket-extensions@0.1.4
  │ ├── jsonparse@1.3.1
  │ ├── lodash@3.10.1
  │ └── object-assign@4.1.1
  ├── pkginfo@0.4.1
  ├── vscode-debugprotocol@1.47.0
  ├─┬ vscode-extension-telemetry@0.0.10
  │ ├── applicationinsights@0.18.0
  │ └── winreg@1.2.3
  ├─┬ vscode-languageclient@2.6.3
  │ ├── vscode-jsonrpc@2.4.0
  │ └── vscode-languageserver-types@1.0.4
  ├─┬ vscode-languageserver@3.5.1
  │ ├─┬ vscode-languageserver-protocol@3.5.1
  │ │ ├── vscode-jsonrpc@3.5.0 extraneous
  │ │ └── vscode-languageserver-types@3.5.0 extraneous
  │ └── vscode-uri@1.0.8 deduped
  └── vscode-uri@1.0.8


 == kamel ==

2c. kamel is built from go sources with no additional requirements
 * GOLANG_IMAGE = registry.access.redhat.com/ubi8/go-toolset:1.14.7-15
 * KAMEL_VERSION = 1.4.0


 == node10 (plugin-java8 container) ==

3. Install node10 deps: typescript@ typescript-language-server@
 * NODEJS_IMAGE = registry.access.redhat.com/ubi8/nodejs-10:1-114
 * NODEMON_VERSION = 1.19.3
 * TYPERSCRIPT_VERSION = 3.4.5
 * TYPESCRIPT_LS_VERSION = 0.3.7

+ typescript-language-server@0.3.7
+ typescript@3.4.5
added 18 packages from 10 contributors and audited 18 packages in 1.796s
found 0 vulnerabilities


/tmp/npm-deps-tmp
├── typescript@3.4.5
└─┬ typescript-language-server@0.3.7
  ├── command-exists@1.2.6
  ├── commander@2.20.3
  ├─┬ fs-extra@7.0.1
  │ ├── graceful-fs@4.2.6
  │ ├─┬ jsonfile@4.0.0
  │ │ └── graceful-fs@4.2.6 deduped
  │ └── universalify@0.1.2
  ├── p-debounce@1.0.0
  ├─┬ tempy@0.2.1
  │ ├── temp-dir@1.0.0
  │ └─┬ unique-string@1.0.0
  │   └── crypto-random-string@1.0.0
  ├─┬ vscode-languageserver@4.4.2
  │ ├─┬ vscode-languageserver-protocol@3.16.0
  │ │ ├── vscode-jsonrpc@6.0.0
  │ │ └── vscode-languageserver-types@3.16.0
  │ └── vscode-uri@1.0.8 deduped
  └── vscode-uri@1.0.8


 == php ==

4. Install php deps: 
 * PHP_LS_VERSION = 5.4.6
 * PHP_LS_IMAGE = php-ls:tmp
 * PHP_XDEBUG_IMAGE = php-xdebug:tmp

$ php composer.phar require jetbrains/phpstorm-stubs:dev-master
$ php composer.phar require felixfbecker/language-server:5.4.6

composer/xdebug-handler               1.4.6              Restarts a process without Xdebug.
felixfbecker/advanced-json-rpc        v3.2.1             A more advanced JSONRPC implementation
felixfbecker/language-server          v5.4.6             PHP Implementation of the Visual Studio Code Language Server Protocol
felixfbecker/language-server-protocol 1.5.1              PHP classes for the Language Server Protocol
jetbrains/phpstorm-stubs              dev-master 835466f PHP runtime & extensions header files for PhpStorm
microsoft/tolerant-php-parser         v0.0.23            Tolerant PHP-to-AST parser designed for IDE usage scenarios
netresearch/jsonmapper                v1.6.0             Map nested JSON structures onto PHP classes
phpdocumentor/reflection-common       2.2.0              Common reflection classes used by phpdocumentor to reflect the code structure
phpdocumentor/reflection-docblock     4.3.4              With this component, a library can provide support for annotations via DocBlocks or otherwise retrieve information that is embedded in a DocBlock.
phpdocumentor/type-resolver           1.4.0              A PSR-5 based resolver of Class names, Types and Structural Element Names
psr/log                               1.1.4              Common interface for logging libraries
sabre/event                           5.1.2              sabre/event is a library for lightweight event-based programming
sabre/uri                             2.2.1              Functions for making sense out of URIs.
symfony/polyfill-ctype                v1.23.0            Symfony polyfill for ctype functions
webmozart/assert                      1.10.0             Assertions to validate method input/output with nice error messages.
webmozart/glob                        4.1.0              A PHP implementation of Ant's glob.
webmozart/path-util                   2.3.0              A robust cross-platform utility for normalizing, comparing and modifying file paths.

 == python (plugin-java8 container) ==

5. Install python deps (including python3-virtualenv): pip install python-language-server[all]==
 * PYTHON_IMAGE = registry.access.redhat.com/ubi8/python-38:1
 * PYTHON_LS_VERSION = 0.36.1

Requirement already satisfied: python-language-server[all]==0.36.1 in /usr/local/lib/python3.6/site-packages (0.36.1)
Requirement already satisfied: pluggy in /usr/local/lib/python3.6/site-packages (from python-language-server[all]==0.36.1) (0.13.1)
Requirement already satisfied: python-jsonrpc-server>=0.4.0 in /usr/local/lib/python3.6/site-packages (from python-language-server[all]==0.36.1) (0.4.0)
Requirement already satisfied: jedi<0.18.0,>=0.17.2 in /usr/local/lib/python3.6/site-packages (from python-language-server[all]==0.36.1) (0.17.2)
Requirement already satisfied: ujson>=3.0.0 in /usr/local/lib64/python3.6/site-packages (from python-language-server[all]==0.36.1) (4.0.2)
Requirement already satisfied: mccabe<0.7.0,>=0.6.0 in /usr/local/lib/python3.6/site-packages (from python-language-server[all]==0.36.1) (0.6.1)
Requirement already satisfied: pydocstyle>=2.0.0 in /usr/local/lib/python3.6/site-packages (from python-language-server[all]==0.36.1) (6.1.1)
Requirement already satisfied: pycodestyle<2.7.0,>=2.6.0 in /usr/local/lib/python3.6/site-packages (from python-language-server[all]==0.36.1) (2.6.0)
Requirement already satisfied: rope>=0.10.5 in /usr/local/lib/python3.6/site-packages (from python-language-server[all]==0.36.1) (0.19.0)
Requirement already satisfied: pylint>=2.5.0 in /usr/local/lib/python3.6/site-packages (from python-language-server[all]==0.36.1) (2.9.1)
Requirement already satisfied: autopep8 in /usr/local/lib/python3.6/site-packages (from python-language-server[all]==0.36.1) (1.5.5)
Requirement already satisfied: pyflakes<2.3.0,>=2.2.0 in /usr/local/lib/python3.6/site-packages (from python-language-server[all]==0.36.1) (2.2.0)
Requirement already satisfied: flake8>=3.8.0 in /usr/local/lib/python3.6/site-packages (from python-language-server[all]==0.36.1) (3.8.4)
Requirement already satisfied: yapf in /usr/local/lib/python3.6/site-packages (from python-language-server[all]==0.36.1) (0.31.0)
Requirement already satisfied: importlib-metadata in /usr/local/lib/python3.6/site-packages (from flake8>=3.8.0->python-language-server[all]==0.36.1) (3.3.0)
Requirement already satisfied: parso<0.8.0,>=0.7.0 in /usr/local/lib/python3.6/site-packages (from jedi<0.18.0,>=0.17.2->python-language-server[all]==0.36.1) (0.7.1)
Requirement already satisfied: snowballstemmer in /usr/local/lib/python3.6/site-packages (from pydocstyle>=2.0.0->python-language-server[all]==0.36.1) (2.1.0)
Requirement already satisfied: toml>=0.7.1 in /usr/local/lib/python3.6/site-packages (from pylint>=2.5.0->python-language-server[all]==0.36.1) (0.10.2)
Requirement already satisfied: isort<6,>=4.2.5 in /usr/local/lib/python3.6/site-packages (from pylint>=2.5.0->python-language-server[all]==0.36.1) (5.9.1)
Requirement already satisfied: astroid<2.7,>=2.6.2 in /usr/local/lib/python3.6/site-packages (from pylint>=2.5.0->python-language-server[all]==0.36.1) (2.6.2)
Requirement already satisfied: typing-extensions>=3.7.4 in /usr/local/lib/python3.6/site-packages (from astroid<2.7,>=2.6.2->pylint>=2.5.0->python-language-server[all]==0.36.1) (3.7.4.3)
Requirement already satisfied: lazy-object-proxy>=1.4.0 in /usr/local/lib64/python3.6/site-packages (from astroid<2.7,>=2.6.2->pylint>=2.5.0->python-language-server[all]==0.36.1) (1.6.0)
Requirement already satisfied: wrapt<1.13,>=1.11 in /usr/local/lib64/python3.6/site-packages (from astroid<2.7,>=2.6.2->pylint>=2.5.0->python-language-server[all]==0.36.1) (1.12.1)
Requirement already satisfied: typed-ast<1.5,>=1.4.0 in /usr/local/lib64/python3.6/site-packages (from astroid<2.7,>=2.6.2->pylint>=2.5.0->python-language-server[all]==0.36.1) (1.4.3)
Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.6/site-packages (from importlib-metadata->flake8>=3.8.0->python-language-server[all]==0.36.1) (3.4.0)

Package                Version
---------------------- -----------
argcomplete            1.12.2
asn1crypto             0.24.0
astroid                2.6.2
attrs                  20.3.0
autopep8               1.5.5
Babel                  2.5.1
CCColUtils             1.5
cffi                   1.11.5
chardet                3.0.4
configobj              5.0.6
cryptography           3.2.1
dbus-python            1.2.4
decorator              4.2.1
distro                 1.4.0
ethtool                0.14
file-magic             0.3.0
flake8                 3.8.4
gitdb2                 2.0.3
GitPython              2.1.11
gpg                    1.13.1
gssapi                 1.5.1
html5lib               0.999999999
idna                   2.5
importlib-metadata     3.3.0
iniparse               0.4
isc                    2.0
isort                  5.9.1
jedi                   0.17.2
Jinja2                 2.10.1
jsonschema             3.2.0
kerberos               1.2.5
kobo                   0.7.0
lazy-object-proxy      1.6.0
libvirt-python         6.0.0
lxml                   4.2.3
MarkupSafe             0.23
mccabe                 0.6.1
nftables               0.1
parso                  0.7.1
pcp                    5.0
perf                   0.1
pexpect                4.3.1
pip                    21.1.3
pluggy                 0.13.1
ply                    3.9
podman                 0.0.0
psutil                 5.4.3
ptyprocess             0.5.2
pycairo                1.16.3
pycodestyle            2.6.0
pycparser              2.14
pycurl                 7.43.0.2
pydbus                 0.6.0
pydocstyle             6.1.1
pyflakes               2.2.0
pygobject              3.28.3
pyinotify              0.9.6
pylint                 2.9.1
pyOpenSSL              19.0.0
pyroute2               0.4.21
pyrsistent             0.17.3
PySocks                1.6.8
python-bugzilla        2.1.0
python-dateutil        2.6.1
python-jsonrpc-server  0.4.0
python-language-server 0.36.1
python-linux-procfs    0.6.3
python-qpid-proton     0.18.1
pytz                   2017.2
pyudev                 0.21.0
PyYAML                 5.3.1
requests               2.20.0
requests-gssapi        1.2.2
requests-kerberos      0.12.0
rhmsg                  0.12.0
rhpkg                  1.42
rope                   0.19.0
rpkg                   1.62
rpm                    4.14.3
schedutils             0.6
selinux                2.9
sepolicy               1.1
setools                4.3.0
setroubleshoot         1.1
setuptools             51.1.1
six                    1.15.0
slip                   0.6.4
slip.dbus              0.6.4
smmap2                 2.0.3
snowballstemmer        2.1.0
sos                    4.0
SSSDConfig             2.4.0
subscription-manager   1.28.13
syspurpose             1.28.13
systemd-python         234
toml                   0.10.2
tuna                   0.15
typed-ast              1.4.3
typing-extensions      3.7.4.3
udica                  0.2.3
ujson                  4.0.2
urllib3                1.24.2
virtualenv             15.1.0
webencodings           0.5.1
wrapt                  1.12.1
xmltodict              0.12.0
yapf                   0.31.0
yq                     2.12.2
zipp                   3.4.0

6. Collect RPM deps

7. Collect MVN deps


8. Collect Theia deps

Short manifest is in file: /var/lib/jenkins/workspace/CRW_CI/Releng/get-3rd-party-deps-manifests/2.9.0/manifest.txt
Long log is in file: /var/lib/jenkins/workspace/CRW_CI/Releng/get-3rd-party-deps-manifests/2.9.0/manifest_log.txt

Overall manifest is in file: /var/lib/jenkins/workspace/CRW_CI/Releng/get-3rd-party-deps-manifests/2.9.0/manifest-all.txt

