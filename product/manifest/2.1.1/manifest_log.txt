1. Generate a list of maven instructions to fetch 3rd party language server dependencies

 == golang ==
        <GOLANG_IMAGE_VERSION>golang:1.11</GOLANG_IMAGE_VERSION>
        <GOLANG_LINT_VERSION>v1.22.2</GOLANG_LINT_VERSION>
        <GOLANG_LS_VERSION>0.1.7</GOLANG_LS_VERSION>
        <!-- <NODEJS_IMAGE_VERSION>node:10.16-alpine</NODEJS_IMAGE_VERSION> -->
        <NODEJS_IMAGE_VERSION>node:8.16-alpine</NODEJS_IMAGE_VERSION>
                    <tarLongFileMode>posix</tarLongFileMode>
 <exec dir="${basedir}" executable="docker" failonerror="true">
     <arg line="run -v ${basedir}/target:/node_modules ${NODEJS_IMAGE_VERSION} sh -c 'npm install --prefix /node_modules ${GOLANG_LS_OLD_DEPS} go-language-server@${GOLANG_LS_VERSION}; chmod -R 777 /node_modules'" />
 <exec dir="${basedir}" executable="docker" failonerror="true">
     <arg line="run -v ${basedir}/target/go:/go ${GOLANG_IMAGE_VERSION} sh -c '
     wget -O- -nv https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s ${GOLANG_LINT_VERSION}

 == node10 ==
        <NODEJS_IMAGE_VERSION>node:10.15-alpine</NODEJS_IMAGE_VERSION>
        <NODEMON_VERSION>1.19.3</NODEMON_VERSION>
        <TYPERSCRIPT_VERSION>3.4.5</TYPERSCRIPT_VERSION>
        <TYPESCRIPT_LS_VERSION>0.3.7</TYPESCRIPT_LS_VERSION>
                    <tarLongFileMode>posix</tarLongFileMode>
 <exec dir="${basedir}" executable="docker" failonerror="true">
     <arg line="run -v ${basedir}/target:/node_modules ${NODEJS_IMAGE_VERSION} sh -c 'npm install --prefix /node_modules nodemon@${NODEMON_VERSION} typescript@${TYPERSCRIPT_VERSION} typescript-language-server@${TYPESCRIPT_LS_VERSION}; chmod -R 777 /node_modules'" />

 == php ==
        <PHP_LS_VERSION>5.4.6</PHP_LS_VERSION>
                            <tarLongFileMode>posix</tarLongFileMode>
                            <tarLongFileMode>posix</tarLongFileMode>
 <exec dir="${basedir}" executable="docker" failonerror="true">
     <arg line="build . -t ${XDEBUG_BUILDER_IMAGE} -f xdebug.Dockerfile" />
 <exec dir="${basedir}" executable="docker" failonerror="true">
 <exec dir="${basedir}" executable="docker" failonerror="true">
 <exec dir="${basedir}" executable="docker" failonerror="true">
     <arg line="rmi -f ${XDEBUG_BUILDER_IMAGE} ${WEBDEVOPS_IMAGE}" />

 == python ==
        <PYTHON_IMAGE_VERSION>registry.access.redhat.com/ubi8/python-36:1</PYTHON_IMAGE_VERSION>
        <PYTHON_LS_VERSION>0.21.5</PYTHON_LS_VERSION>
                    <tarLongFileMode>posix</tarLongFileMode>
 <exec dir="${basedir}" executable="docker" failonerror="true">
     <arg line="run -v ${basedir}/target/python-ls:/python -u root ${PYTHON_IMAGE_VERSION} sh -c 'pip install --upgrade pip; pip install python-language-server[all]==${PYTHON_LS_VERSION} --install-option='--prefix=/python';  chmod -R 777 /python'" />

2. Define list of upstream containers & RPMs pulled into them from https://pkgs.devel.redhat.com/cgit/?q=codeready-workspaces 

== codeready-workspaces (crw-2.0-rhel-8) ==
FROM openjdk/openjdk-8-rhel8:1.2-3.1583838313
COPY codeready-workspaces-assembly-main.tar.gz /tmp/codeready-workspaces-assembly-main.tar.gz

== codeready-workspaces-operator (crw-2.0-rhel-8) ==
FROM devtools/go-toolset-rhel7:1.12.12-4  as builder
ADD . /go/src/github.com/eclipse/che-operator
FROM ubi8-minimal:8.1-409
COPY --from=builder /tmp/che-operator/che-operator /usr/local/bin/che-operator
COPY --from=builder /go/src/github.com/eclipse/che-operator/templates/keycloak_provision /tmp/keycloak_provision
COPY --from=builder /go/src/github.com/eclipse/che-operator/templates/oauth_provision /tmp/oauth_provision
RUN microdnf update -y libnghttp2 && microdnf clean all && rm -rf /var/cache/yum && echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"

== codeready-workspaces-operator-metadata (crw-2.0-rhel-8) ==
FROM scratch
ADD controller-manifests /manifests

== codeready-workspaces-jwtproxy (crw-2.0-rhel-8) ==
FROM rhel8/go-toolset:1.12.8-45 as builder
COPY . .
RUN CGO_ENABLED=0 GOOS=linux go build -a -ldflags '-w -s' -a -installsuffix cgo -o jwtproxy cmd/jwtproxy/main.go
FROM ubi8-minimal:8.1-409
COPY --from=builder /go/src/github.com/eclipse/che-jwtproxy/jwtproxy /usr/local/bin

== codeready-workspaces-machineexec (crw-2.0-rhel-8) ==
FROM rhel8/go-toolset:1.12.8-45 as builder
COPY . .
RUN adduser unprivilegeduser && \
    CGO_ENABLED=0 GOOS=linux go build -a -ldflags '-w -s' -a -installsuffix cgo -o che-machine-exec . && \
FROM scratch
COPY --from=builder /rootfs /

== codeready-workspaces-devfileregistry (crw-2.0-rhel-8) ==
FROM ubi8-minimal:8.1-409 as builder
COPY root-local.tgz /tmp/root-local.tgz
COPY ./build/dockerfiles/content_set*.repo /etc/yum.repos.d/
COPY ./build/dockerfiles/rhel.install.sh /tmp
RUN /tmp/rhel.install.sh && rm -f /tmp/rhel.install.sh
COPY ./build/scripts ./arbitrary-users-patch/base_images /build/
COPY ./devfiles /build/devfiles
COPY ./build/dockerfiles/rhel.cache_projects.sh resources.tgz /tmp/ 
FROM rhel8/httpd-24:1-89 AS registry
COPY .htaccess README.md /var/www/html/
COPY --from=builder /build/devfiles /var/www/html/devfiles
COPY --from=builder /build/resources /var/www/html/resources
COPY ./images /var/www/html/images

== codeready-workspaces-pluginregistry (crw-2.0-rhel-8) ==
FROM ubi8-minimal:8.1-409 as builder
COPY root-local.tgz /tmp/root-local.tgz
COPY ./build/dockerfiles/content_set*.repo /etc/yum.repos.d/
COPY ./build/dockerfiles/rhel.install.sh /tmp
RUN /tmp/rhel.install.sh && rm -f /tmp/rhel.install.sh
COPY ./build/scripts/*.sh ./build/scripts/meta.yaml.schema /build/
COPY ./v3 /build/v3
COPY ./build/dockerfiles/rhel.cache_artifacts.sh resources.tgz /tmp/ 
FROM rhel8/httpd-24:1-89 AS registry
COPY .htaccess README.md /var/www/html/
COPY --from=builder /build/v3 /var/www/html/v3

== codeready-workspaces-pluginbroker-metadata (crw-2.0-rhel-8) ==
FROM devtools/go-toolset-rhel7:1.12.12-4 as builder
COPY . /go/src/github.com/eclipse/che-plugin-broker/
RUN adduser appuser && \
    CGO_ENABLED=0 GOOS=linux go build -a -ldflags '-w -s' -installsuffix cgo -o metadata-broker main.go
FROM ubi8-minimal:8.1-409
RUN microdnf update -y systemd && microdnf clean all && rm -rf /var/cache/yum
COPY --from=builder /etc/passwd /etc/passwd
COPY --from=builder /go/src/github.com/eclipse/che-plugin-broker/brokers/metadata/cmd/metadata-broker /

== codeready-workspaces-plugin-artifacts (crw-2.0-rhel-8) ==


== codeready-workspaces-plugin-kubernetes (crw-2.0-rhel-8) ==
FROM ubi8-minimal:8.1-409
    HELM_VERSION="v3.0.3" \
    KUBECTL_VERSION="v1.17.3" \
    KAMEL_VERSION="1.0.0-RC2" \
ADD etc/storage.conf $HOME/.config/containers/storage.conf
COPY etc/docker.sh /usr/local/bin/docker
COPY bin.tgz /tmp/
RUN microdnf install -y which dnf && dnf install -y buildah nodejs npm && \
    dnf update -y systemd buildah nodejs npm fuse-overlayfs slirp4netns && dnf clean all && rm -rf /var/cache/yum && \
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages" && \

== codeready-workspaces-plugin-openshift (crw-2.0-rhel-8) ==
FROM ubi8-minimal:8.1-409
    OC_VERSION="3.11.175" \
    ODO_VERSION="v1.1.0" \
    KUBECTL_VERSION="v1.17.3" \
COPY bin.tgz /tmp/
RUN microdnf install -y bash tar gzip which && \
    microdnf update -y systemd && microdnf clean all && rm -rf /var/cache/yum && \
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages" && \

== codeready-workspaces-imagepuller (crw-2.0-rhel-8) ==
FROM devtools/go-toolset-rhel7:1.12.12-4 as builder
COPY go.mod .
COPY go.sum .
COPY resources.tgz /tmp/resources.tgz
COPY . .
RUN adduser appuser && \
FROM ubi8-minimal:8.1-409
COPY --from=builder /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem /etc/pki/ca-trust/extracted/pem/
COPY --from=builder /etc/pki/tls/certs/ca-bundle.crt                  /etc/pki/tls/certs/
COPY --from=builder /etc/passwd /etc/passwd
COPY --from=builder /kubernetes-image-puller/bin/kubernetes-image-puller /

== codeready-workspaces-theia-dev (crw-2.0-rhel-8) ==
FROM ubi8/nodejs-10:1-66.1584015429
RUN yum install -y curl make cmake gcc gcc-c++ python2 git openssh less bash tar gzip \
    && yum -y clean all && rm -rf /var/cache/yum && \
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"
COPY asset-yarn.tgz /tmp/
COPY asset-eclipse-che-theia-generator.tgz ${HOME}/eclipse-che-theia-generator.tgz
    yarn ${YARN_FLAGS} global add yo generator-code vsce @theia/generator-plugin@0.0.1-1562578105 file:${HOME}/eclipse-che-theia-generator.tgz && \
RUN echo "Installed npm Packages" && npm ls -g | sort | uniq && yarn global list && echo "End Of Installed npm Packages"

== codeready-workspaces-theia (crw-2.0-rhel-8) ==
FROM registry-proxy.engineering.redhat.com/rh-osbs/codeready-workspaces-theia-dev-rhel8:2.1 as builder
ARG THEIA_VERSION=master
COPY asset-theia-source-code.tar.gz /tmp/asset-theia-source-code.tar.gz
COPY branding.zip /tmp/branding.zip
ADD src/patches ${HOME}/patches
RUN if [ -d "${HOME}/patches/${THEIA_VERSION}" ]; then \
    echo "Applying patches for Theia version ${THEIA_VERSION}"; \
    for file in $(find "${HOME}/patches/${THEIA_VERSION}" -name '*.patch'); do \
COPY asset-che-theia.tar.gz /tmp/asset-che-theia.tar.gz
COPY asset-yarn.tar.gz asset-post-download-dependencies.tar.gz /tmp/
COPY asset-yarn.lock ${HOME}/theia-source-code/yarn.lock
COPY asset-node-headers.tar.gz ${HOME}/asset-node-headers.tar.gz
COPY asset-untagged-theia_yeoman_plugin.theia /home/theia-dev/theia-source-code/production/plugins/theia_yeoman_plugin.theia
FROM ubi8/nodejs-10:1-66.1584015429 as runtime
COPY --from=builder /tmp/branding ${HOME}/branding
COPY --from=builder /home/theia-dev/theia-source-code/production/plugins /default-theia-plugins
RUN yum install -y sudo git bzip2 which bash curl openssh less && \
    yum -y clean all && rm -rf /var/cache/yum && \
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"
COPY asset-yarn-runtime-image.tar.gz /tmp/
    adduser -r -u 1002 -G root -d ${HOME} -m -s /bin/sh theia \
    && yarn global add ${YARN_FLAGS} yo @theia/generator-plugin@0.0.1-1562578105 generator-code typescript@3.5.3 \
COPY --chown=theia:root --from=builder /home/theia-dev/theia-source-code/production /home/theia

== codeready-workspaces-theia-endpoint (crw-2.0-rhel-8) ==
FROM registry-proxy.engineering.redhat.com/rh-osbs/codeready-workspaces-theia-rhel8:2.1 as builder
COPY asset-theia-endpoint-runtime-binary-yarn.tar.gz asset-node-src.tar.gz /tmp/
    export NODE_VERSION=$(node --version | sed -s 's/v//') && mkdir -p "/home/theia/.nexe/${NODE_VERSION}" && tar zxf /tmp/asset-node-src.tar.gz --strip-components=1 -C "/home/theia/.nexe/${NODE_VERSION}"
RUN yum install -y git make cmake gcc gcc-c++ python2 automake autoconf which glibc-devel.x86_64 && \
    yum -y clean all && rm -rf /var/cache/yum && ln -s /usr/bin/python2 /usr/bin/python
RUN yarn global add ${YARN_FLAGS} nexe@3.3.2
FROM ubi8-minimal:8.1-409 as runtime
RUN microdnf update -y nodejs npm systemd && microdnf clean all && rm -rf /var/cache/yum
COPY --from=builder /home/theia/plugin-remote-endpoint /plugin-remote-endpoint

== codeready-workspaces-stacks-cpp (crw-2.0-rhel-8) ==
FROM rhel8/llvm-toolset:8.0.1-37
    yum install -y llvm-toolset clang clang-libs clang-tools-extra git-clang-format gdb wget bzip2 sudo make cmake gcc gcc-c++ \
    yum update -y kernel-headers pango libnghttp2 systemd nodejs npm && \
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"

== codeready-workspaces-stacks-dotnet (crw-2.0-rhel-8) ==
FROM ubi8/dotnet-31:3.1-3.20200129203434
    DOTNET_RPM_VERSION=3.1 \
RUN yum install -y --setopt=tsflags=nodocs wget curl atomic-openshift-clients dotnet dotnet-host \
    dotnet-hostfxr-${DOTNET_RPM_VERSION} dotnet-runtime-${DOTNET_RPM_VERSION} dotnet-sdk-${DOTNET_RPM_VERSION} && \
    yum update -y systemd nodejs npm libicu && \
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"

== codeready-workspaces-stacks-golang (crw-2.0-rhel-8) ==
FROM rhel8/go-toolset:1.12.8-45
    yum install -y java-1.8.0-openjdk-devel java-1.8.0-openjdk-headless java-1.8.0-openjdk \
    sudo git wget curl nss_wrapper bzip2 nodejs nodejs-nodemon npm atomic-openshift-clients && \
COPY codeready-workspaces-stacks-language-servers-dependencies-golang.tar.gz ${HOME}/che/ls-golang
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"
      jenkins.build.url="https://codeready-workspaces-jenkins.rhev-ci-vms.eng.rdu2.redhat.com/view/CRW_CI/view/Pipelines/job/crw-operator-installer-and-ls-deps_master/146/" \
      jenkins.artifact.url="https://codeready-workspaces-jenkins.rhev-ci-vms.eng.rdu2.redhat.com/view/CRW_CI/view/Pipelines/job/crw-operator-installer-and-ls-deps_master/146/artifact/**/codeready-workspaces-stacks-language-servers-dependencies-golang.tar.gz" \

== codeready-workspaces-stacks-java (crw-2.0-rhel-8) ==
FROM jboss-eap-7/eap72-openjdk11-openshift-rhel8:1.2-16
RUN yum remove -y java-11-openjdk && \
    yum install -y sudo git procps-ng wget curl nss_wrapper bzip2 atomic-openshift-clients \
    yum update -y python3-six python3-pysocks python3-idna python3-urllib3 pango libnghttp2 atomic-openshift-clients systemd && \
ADD report.py stack-analysis.sh ${HOME}/
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"

== codeready-workspaces-stacks-node (crw-2.0-rhel-8) ==
FROM ubi8/nodejs-10:1-66.1584015429
    NODEJS_VERSION=10 \
    yum remove -y kernel-headers && \
    yum install -y java-1.8.0-openjdk curl bzip2 python36 atomic-openshift-clients && \
    yum update -y nodejs npm python3-six pango libnghttp2 systemd && \
COPY codeready-workspaces-stacks-language-servers-dependencies-node10.tar.gz /tmp/codeready-workspaces-stacks-language-servers-dependencies-node10.tar.gz
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"
      jenkins.build.url="https://codeready-workspaces-jenkins.rhev-ci-vms.eng.rdu2.redhat.com/view/CRW_CI/view/Pipelines/job/crw-operator-installer-and-ls-deps_master/146/" \
      jenkins.artifact.url="https://codeready-workspaces-jenkins.rhev-ci-vms.eng.rdu2.redhat.com/view/CRW_CI/view/Pipelines/job/crw-operator-installer-and-ls-deps_master/146/artifact/**/codeready-workspaces-stacks-language-servers-dependencies-node10.tar.gz" \

== codeready-workspaces-stacks-php (crw-2.0-rhel-8) ==
FROM ubi8/php-73:1-23.1584015436
COPY codeready-workspaces-stacks-language-servers-dependencies-php-xdebug.tar.gz /tmp/codeready-workspaces-stacks-language-servers-dependencies-php-xdebug.tar.gz
RUN dnf install -y php-fpm php-opcache php-devel php-pear php-gd php-mysqli php-zlib php-curl ca-certificates && \
    yum remove -y kernel-headers && \
    yum install -y java-1.8.0-openjdk sudo atomic-openshift-clients && \
    yum update -y nodejs npm pango libnghttp2 php php-cli php-bcmath php-common php-fpm php-opcache php-devel php-pear php-gd php-mysqli php-zlib php-curl php-pecl-apcu php-pecl-zip libzip systemd libicu && \
COPY codeready-workspaces-stacks-language-servers-dependencies-php.tar.gz /tmp/codeready-workspaces-stacks-language-servers-dependencies-php.tar.gz
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"
      jenkins.build.url="https://codeready-workspaces-jenkins.rhev-ci-vms.eng.rdu2.redhat.com/view/CRW_CI/view/Pipelines/job/crw-operator-installer-and-ls-deps_master/146/" \
      jenkins.artifact.url="https://codeready-workspaces-jenkins.rhev-ci-vms.eng.rdu2.redhat.com/view/CRW_CI/view/Pipelines/job/crw-operator-installer-and-ls-deps_master/146/artifact/**/codeready-workspaces-stacks-language-servers-dependencies-php.tar.gz" \
      jenkins.artifact.url="https://codeready-workspaces-jenkins.rhev-ci-vms.eng.rdu2.redhat.com/view/CRW_CI/view/Pipelines/job/crw-operator-installer-and-ls-deps_master/146/artifact/**/codeready-workspaces-stacks-language-servers-dependencies-php-xdebug.tar.gz" \

== codeready-workspaces-stacks-python (crw-2.0-rhel-8) ==
FROM ubi8/python-36:1-75.1584015428
    yum remove -y kernel-headers && \
    yum install -y java-1.8.0-openjdk atomic-openshift-clients && \
    yum update -y pango libnghttp2 sqlite libarchive systemd nodejs npm && \
COPY codeready-workspaces-stacks-language-servers-dependencies-python.tar.gz /tmp
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"
      jenkins.build.url="https://codeready-workspaces-jenkins.rhev-ci-vms.eng.rdu2.redhat.com/view/CRW_CI/view/Pipelines/job/crw-operator-installer-and-ls-deps_master/146/" \
      jenkins.artifact.url="https://codeready-workspaces-jenkins.rhev-ci-vms.eng.rdu2.redhat.com/view/CRW_CI/view/Pipelines/job/crw-operator-installer-and-ls-deps_master/146/artifact/**/codeready-workspaces-stacks-language-servers-dependencies-python.tar.gz" \

== codeready-workspaces-plugin-java11 (crw-2.0-rhel-8) ==
FROM ubi8-minimal:8.1-409
    GRADLE_VERSION="6.1" \
    MAVEN_VERSION="3.6.3" \
COPY bin.tgz /tmp/
RUN microdnf install -y bash tar gzip which shadow-utils findutils wget curl atomic-openshift-clients \
    microdnf clean all && rm -rf /var/cache/yum && \
    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages" && \

3. Other than the above, all artifacts used in CodeReady Workspaces are now built in RH Central CI Jenkins:
https://codeready-workspaces-jenkins.rhev-ci-vms.eng.rdu2.redhat.com/view/CRW_CI/view/Builds/
https://codeready-workspaces-jenkins.rhev-ci-vms.eng.rdu2.redhat.com/view/CRW_CI/view/Pipelines/

See also latest build architecture diagram & development documentation:
https://docs.google.com/presentation/d/1R9tr67pDMk3UVUbvN7vBJbJCYGlUsO2ZPcXbdaoOvTs/edit#slide=id.g4ac34a3cdd_0_0
https://github.com/redhat-developer/codeready-workspaces-productization/tree/master/devdoc
[INFO] GOLANG_IMAGE_VERSION = golang:1.11
[INFO] GOLANG_LS_VERSION = 0.1.7
[INFO] NODEJS_IMAGE_VERSION = node:10.16-alpine

 == golang ==

4c-1. Install golang go deps: go-language-server@0.1.7

  go get -v github.com/stamblerre/gocode
  go get -v github.com/uudashr/gopkgs/cmd/gopkgs
  go get -v github.com/ramya-rao-a/go-outline
  go get -v github.com/acroca/go-symbols
  go get -v golang.org/x/tools/cmd/guru
  go get -v golang.org/x/tools/cmd/gorename
  go get -v github.com/fatih/gomodifytags
  go get -v github.com/haya14busa/goplay/cmd/goplay
  go get -v github.com/josharian/impl
  go get -v golang.org/x/tools/cmd/gotype
  go get -v github.com/rogpeppe/godef
  go get -v golang.org/x/tools/cmd/godoc
  go get -v github.com/zmb3/gogetdoc
  go get -v golang.org/x/tools/cmd/goimports
  go get -v sourcegraph.com/sqs/goreturns
  go get -v golang.org/x/lint/golint
  go get -v github.com/cweill/gotests/...
  go get -v honnef.co/go/tools/...
  go get -v github.com/sourcegraph/go-langserver
  go get -v github.com/go-delve/delve/cmd/dlv
  go get -v github.com/davidrjenni/reftools/cmd/fillstruct
  go get -v golang.org/x/tools/gopls

4c-2. Install golang npm deps: go-language-server@0.1.7


> console-stamp@0.2.9 postinstall /tmp/npm-deps-tmp/node_modules/console-stamp
> node ./msg.js

Attention
    Console-stamp version 3.0.0 Release Candidate is out. Install by using the tag '@next'. NB: Breaking changes.
    For more details goto: https://www.npmjs.com/package/console-stamp/v/next

+ go-language-server@0.1.7
added 86 packages from 70 contributors and audited 119 packages in 9.846s
found 3 vulnerabilities (1 low, 2 high)
  run `npm audit fix` to fix them, or `npm audit` for details

/tmp/npm-deps-tmp
└─┬ go-language-server@0.1.7
  ├── command-exists@1.2.9
  ├── commander@2.20.3
  ├─┬ console-stamp@0.2.9
  │ ├─┬ chalk@1.1.3
  │ │ ├── ansi-styles@2.2.1
  │ │ ├── escape-string-regexp@1.0.5
  │ │ ├─┬ has-ansi@2.0.0
  │ │ │ └── ansi-regex@2.1.1
  │ │ ├─┬ strip-ansi@3.0.1
  │ │ │ └── ansi-regex@2.1.1 deduped
  │ │ └── supports-color@2.0.0
  │ ├─┬ dateformat@1.0.12
  │ │ ├── get-stdin@4.0.1
  │ │ └─┬ meow@3.7.0
  │ │   ├─┬ camelcase-keys@2.1.0
  │ │   │ ├── camelcase@2.1.1
  │ │   │ └── map-obj@1.0.1 deduped
  │ │   ├── decamelize@1.2.0
  │ │   ├─┬ loud-rejection@1.6.0
  │ │   │ ├─┬ currently-unhandled@0.4.1
  │ │   │ │ └── array-find-index@1.0.2
  │ │   │ └── signal-exit@3.0.3
  │ │   ├── map-obj@1.0.1
  │ │   ├── minimist@1.2.5
  │ │   ├─┬ normalize-package-data@2.5.0
  │ │   │ ├── hosted-git-info@2.8.8
  │ │   │ ├─┬ resolve@1.16.1
  │ │   │ │ └── path-parse@1.0.6
  │ │   │ ├── semver@5.7.1
  │ │   │ └─┬ validate-npm-package-license@3.0.4
  │ │   │   ├─┬ spdx-correct@3.1.0
  │ │   │   │ ├── spdx-expression-parse@3.0.0 deduped
  │ │   │   │ └── spdx-license-ids@3.0.5
  │ │   │   └─┬ spdx-expression-parse@3.0.0
  │ │   │     ├── spdx-exceptions@2.3.0
  │ │   │     └── spdx-license-ids@3.0.5 deduped
  │ │   ├── object-assign@4.1.1 deduped
  │ │   ├─┬ read-pkg-up@1.0.1
  │ │   │ ├─┬ find-up@1.1.2
  │ │   │ │ ├─┬ path-exists@2.1.0
  │ │   │ │ │ └── pinkie-promise@2.0.1 deduped
  │ │   │ │ └─┬ pinkie-promise@2.0.1
  │ │   │ │   └── pinkie@2.0.4
  │ │   │ └─┬ read-pkg@1.1.0
  │ │   │   ├─┬ load-json-file@1.1.0
  │ │   │   │ ├── graceful-fs@4.2.3 deduped
  │ │   │   │ ├─┬ parse-json@2.2.0
  │ │   │   │ │ └─┬ error-ex@1.3.2
  │ │   │   │ │   └── is-arrayish@0.2.1
  │ │   │   │ ├── pify@2.3.0
  │ │   │   │ ├── pinkie-promise@2.0.1 deduped
  │ │   │   │ └─┬ strip-bom@2.0.0
  │ │   │   │   └── is-utf8@0.2.1
  │ │   │   ├── normalize-package-data@2.5.0 deduped
  │ │   │   └─┬ path-type@1.1.0
  │ │   │     ├── graceful-fs@4.2.3 deduped
  │ │   │     ├── pify@2.3.0 deduped
  │ │   │     └── pinkie-promise@2.0.1 deduped
  │ │   ├─┬ redent@1.0.0
  │ │   │ ├─┬ indent-string@2.1.0
  │ │   │ │ └─┬ repeating@2.0.1
  │ │   │ │   └── is-finite@1.1.0
  │ │   │ └─┬ strip-indent@1.0.1
  │ │   │   └── get-stdin@4.0.1 deduped
  │ │   └── trim-newlines@1.0.0
  │ └── merge@1.2.1
  ├── diff@3.3.1
  ├─┬ fs-extra@4.0.3
  │ ├── graceful-fs@4.2.3
  │ ├─┬ jsonfile@4.0.0
  │ │ └── graceful-fs@4.2.3 deduped
  │ └── universalify@0.1.2
  ├─┬ json-rpc2@1.0.2
  │ ├─┬ debug@2.6.9
  │ │ └── ms@2.0.0
  │ ├─┬ es5class@2.3.1
  │ │ └── better-curry@1.6.0
  │ ├── eventemitter3@1.2.0
  │ ├─┬ faye-websocket@0.11.3
  │ │ └─┬ websocket-driver@0.7.3
  │ │   ├── http-parser-js@0.4.10
  │ │   ├── safe-buffer@5.2.0
  │ │   └── websocket-extensions@0.1.3
  │ ├── jsonparse@1.3.1
  │ ├── lodash@3.10.1
  │ └── object-assign@4.1.1
  ├── pkginfo@0.4.1
  ├── vscode-debugprotocol@1.40.0
  ├─┬ vscode-extension-telemetry@0.0.10
  │ ├── applicationinsights@0.18.0
  │ └── winreg@1.2.3
  ├─┬ vscode-languageclient@2.6.3
  │ ├── vscode-jsonrpc@2.4.0
  │ └── vscode-languageserver-types@1.0.4
  ├─┬ vscode-languageserver@3.5.1
  │ ├─┬ vscode-languageserver-protocol@3.5.1
  │ │ ├── vscode-jsonrpc@3.5.0 extraneous
  │ │ └── vscode-languageserver-types@3.5.0 extraneous
  │ └── vscode-uri@1.0.8 deduped
  └── vscode-uri@1.0.8

[INFO] NODEJS_IMAGE_VERSION = node:10.16-alpine
[INFO] TYPERSCRIPT_VERSION = 3.4.5
[INFO] TYPESCRIPT_LS_VERSION = 0.3.7

 == node ==

4d. Install node deps: typescript@3.4.5 typescript-language-server@0.3.7

+ typescript@3.4.5
+ typescript-language-server@0.3.7
added 18 packages from 10 contributors and audited 20 packages in 1.887s
found 0 vulnerabilities


/tmp/npm-deps-tmp
├── typescript@3.4.5
└─┬ typescript-language-server@0.3.7
  ├── command-exists@1.2.6
  ├── commander@2.20.3
  ├─┬ fs-extra@7.0.1
  │ ├── graceful-fs@4.2.3
  │ ├─┬ jsonfile@4.0.0
  │ │ └── graceful-fs@4.2.3 deduped
  │ └── universalify@0.1.2
  ├── p-debounce@1.0.0
  ├─┬ tempy@0.2.1
  │ ├── temp-dir@1.0.0
  │ └─┬ unique-string@1.0.0
  │   └── crypto-random-string@1.0.0
  ├─┬ vscode-languageserver@4.4.2
  │ ├─┬ vscode-languageserver-protocol@3.15.3
  │ │ ├── vscode-jsonrpc@5.0.1
  │ │ └── vscode-languageserver-types@3.15.1
  │ └── vscode-uri@1.0.8 deduped
  └── vscode-uri@1.0.8

[INFO] PHP_LS_VERSION = 5.4.6
[INFO] WEBDEVOPS_IMAGE = 
[INFO] XDEBUG_BUILDER_IMAGE = 

 == php ==

4e. Install php deps: 

$ php composer.phar require jetbrains/phpstorm-stubs:dev-master
$ php composer.phar require felixfbecker/language-server:5.4.6

felixfbecker/language-server v5.4.6 PHP Implementation of the Visual Studio Code Language Server Protocol
|--composer/xdebug-handler ^1.0
|  |--php ^5.3.2 || ^7.0 || ^8.0
|  `--psr/log ^1.0
|     `--php >=5.3.0
|--felixfbecker/advanced-json-rpc ^3.0.0
|  |--netresearch/jsonmapper ^1.0 || ^2.0
|  |  |--ext-json *
|  |  |--ext-pcre *
|  |  |--ext-reflection *
|  |  |--ext-spl *
|  |  `--php >=5.6
|  |--php >=7.0
|  `--phpdocumentor/reflection-docblock ^4.0.0 || ^5.0.0
|     |--php ^7.0
|     |--phpdocumentor/reflection-common ^1.0.0 || ^2.0.0
|     |  `--php >=7.1
|     |--phpdocumentor/type-resolver ~0.4 || ^1.0.0
|     |  |--php ^7.2
|     |  `--phpdocumentor/reflection-common ^2.0
|     |     `--php >=7.1
|     `--webmozart/assert ^1.0
|        |--php ^5.3.3 || ^7.0
|        `--symfony/polyfill-ctype ^1.8
|           `--php >=5.3.3
|--felixfbecker/language-server-protocol ^1.0.1
|  `--php ^7.0
|--jetbrains/phpstorm-stubs dev-master
|--microsoft/tolerant-php-parser 0.0.*
|  `--php >=7.0
|--netresearch/jsonmapper ^1.0
|  |--ext-json *
|  |--ext-pcre *
|  |--ext-reflection *
|  |--ext-spl *
|  `--php >=5.6
|--php ^7.0
|--phpdocumentor/reflection-docblock ^4.0.0
|  |--php ^7.0
|  |--phpdocumentor/reflection-common ^1.0.0 || ^2.0.0
|  |  `--php >=7.1
|  |--phpdocumentor/type-resolver ~0.4 || ^1.0.0
|  |  |--php ^7.2
|  |  `--phpdocumentor/reflection-common ^2.0
|  |     `--php >=7.1
|  `--webmozart/assert ^1.0
|     |--php ^5.3.3 || ^7.0
|     `--symfony/polyfill-ctype ^1.8
|        `--php >=5.3.3
|--psr/log ^1.0
|  `--php >=5.3.0
|--sabre/event ^5.0
|  `--php ^7.1
|--sabre/uri ^2.0
|  `--php ^7.1
|--webmozart/glob ^4.1
|  |--php ^5.3.3|^7.0
|  `--webmozart/path-util ^2.2
|     |--php >=5.3.3
|     `--webmozart/assert ~1.0
|        |--php ^5.3.3 || ^7.0
|        `--symfony/polyfill-ctype ^1.8
|           `--php >=5.3.3
`--webmozart/path-util ^2.3
   |--php >=5.3.3
   `--webmozart/assert ~1.0
      |--php ^5.3.3 || ^7.0
      `--symfony/polyfill-ctype ^1.8
         `--php >=5.3.3
jetbrains/phpstorm-stubs dev-master PHP runtime & extensions header files for PhpStorm

composer/xdebug-handler               1.4.1              Restarts a process without Xdebug.
felixfbecker/advanced-json-rpc        v3.1.1             A more advanced JSONRPC implementation
felixfbecker/language-server          v5.4.6             PHP Implementation of the Visual Studio Code Language Server Protocol
felixfbecker/language-server-protocol v1.4.0             PHP classes for the Language Server Protocol
jetbrains/phpstorm-stubs              dev-master 84392cc PHP runtime & extensions header files for PhpStorm
microsoft/tolerant-php-parser         v0.0.20            Tolerant PHP-to-AST parser designed for IDE usage scenarios
netresearch/jsonmapper                v1.6.0             Map nested JSON structures onto PHP classes
phpdocumentor/reflection-common       2.0.0              Common reflection classes used by phpdocumentor to reflect the code structure
phpdocumentor/reflection-docblock     4.3.4              With this component, a library can provide support for annotations via DocBlocks or otherwise retrieve information that is emb...
phpdocumentor/type-resolver           1.1.0              A PSR-5 based resolver of Class names, Types and Structural Element Names
psr/log                               1.1.3              Common interface for logging libraries
sabre/event                           5.1.0              sabre/event is a library for lightweight event-based programming
sabre/uri                             2.2.0              Functions for making sense out of URIs.
symfony/polyfill-ctype                v1.15.0            Symfony polyfill for ctype functions
webmozart/assert                      1.8.0              Assertions to validate method input/output with nice error messages.
webmozart/glob                        4.1.0              A PHP implementation of Ant's glob.
webmozart/path-util                   2.3.0              A robust cross-platform utility for normalizing, comparing and modifying file paths.
[INFO] PYTHON_IMAGE_VERSION = registry.access.redhat.com/ubi8/python-36:1
[INFO] PYTHON_LS_VERSION = 0.21.5

 == python ==

4f. Install python deps: pip install python-language-server[all]==0.21.5

Processing /home/nboldt/.cache/pip/wheels/3a/7d/4c/81934089ae96d84a84b3197043f63abf4ca9829b25e63b8c07/python_language_server-0.21.5-py3-none-any.whl
Collecting pluggy
  Using cached pluggy-0.13.1-py2.py3-none-any.whl (18 kB)
Collecting jedi>=0.12
  Downloading jedi-0.17.0-py2.py3-none-any.whl (1.1 MB)
Collecting python-jsonrpc-server>=0.1.0
  Using cached python_jsonrpc_server-0.3.4-py3-none-any.whl (9.0 kB)
Processing /home/nboldt/.cache/pip/wheels/56/b0/fe/4410d17b32f1f0c3cf54cdfb2bc04d7b4b8f4ae377e2229ba0/future-0.18.2-py3-none-any.whl
Collecting pycodestyle; extra == "all"
  Using cached pycodestyle-2.5.0-py2.py3-none-any.whl (51 kB)
Collecting pydocstyle>=2.0.0; extra == "all"
  Using cached pydocstyle-5.0.2-py3-none-any.whl (35 kB)
Collecting autopep8; extra == "all"
  Downloading autopep8-1.5.2.tar.gz (117 kB)
Collecting pyflakes>=1.6.0; extra == "all"
  Downloading pyflakes-2.2.0-py2.py3-none-any.whl (66 kB)
Collecting mccabe; extra == "all"
  Using cached mccabe-0.6.1-py2.py3-none-any.whl (8.6 kB)
Collecting yapf; extra == "all"
  Using cached yapf-0.29.0-py2.py3-none-any.whl (185 kB)
Collecting rope>=0.10.5; extra == "all"
  Using cached rope-0.16.0-py3-none-any.whl (180 kB)
Collecting importlib-metadata>=0.12; python_version < "3.8"
  Using cached importlib_metadata-1.6.0-py2.py3-none-any.whl (30 kB)
Collecting parso>=0.7.0
  Downloading parso-0.7.0-py2.py3-none-any.whl (100 kB)
Collecting ujson<=1.35; platform_system != "Windows"
  Using cached ujson-1.35.tar.gz (192 kB)
Collecting snowballstemmer
  Using cached snowballstemmer-2.0.0-py2.py3-none-any.whl (97 kB)
Collecting zipp>=0.5
  Using cached zipp-3.1.0-py3-none-any.whl (4.9 kB)
Building wheels for collected packages: autopep8, ujson
  Building wheel for autopep8 (setup.py): started
  Building wheel for autopep8 (setup.py): finished with status 'done'
  Created wheel for autopep8: filename=autopep8-1.5.2-py2.py3-none-any.whl size=43754 sha256=0dab69159184d5e7ffe13293e49fadba434fe1d970c136ce86d3c0c670fe29a0
  Stored in directory: /home/nboldt/.cache/pip/wheels/77/ad/47/a9a2cfdfb040efce8838dc52b6b96f8be4fdd63e5cda719eff
  Building wheel for ujson (setup.py): started
  Building wheel for ujson (setup.py): finished with status 'error'
  Running setup.py clean for ujson
Successfully built autopep8
Failed to build ujson
Installing collected packages: zipp, importlib-metadata, pluggy, parso, jedi, ujson, python-jsonrpc-server, future, pycodestyle, snowballstemmer, pydocstyle, autopep8, pyflakes, mccabe, yapf, rope, python-language-server
    Running setup.py install for ujson: started
    Running setup.py install for ujson: finished with status 'error'

Package            Version
------------------ -------
importlib-metadata 1.6.0  
jedi               0.17.0 
parso              0.7.0  
pip                20.0.2 
pluggy             0.13.1 
setuptools         46.1.3 
wheel              0.34.2 
zipp               3.1.0  

5. Collect RPM deps

6. Collect MVN deps


7. Collect Theia deps (NEW for CRW 2.0)

Short manifest is in file: /tmp/manifest.txt
Long log is in file: /tmp/manifest_log.txt

Overall manifest is in file: /tmp/manifest-all.txt

